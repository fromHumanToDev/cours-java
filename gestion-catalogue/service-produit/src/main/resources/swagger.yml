#https://swagger.io/docs/specification/data-models/data-types/
swagger: "2.0"
info:
  description: "Ce service permet de recupérer des produits associés a leur famille, ou de recuperer la liste des produits attachés a une famille"
  version: "1.0.0"
  title: "Swagger Produit"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost"
basePath: "/api"
tags:
  - name: "produit"
    description: "Accès aux données produits"
  - name: "famille"
    description: "Access aux données familles"
schemes:
  - "http"
paths:
  /produits:
    get:
      tags:
        - "produit"
      summary: "Lister les produits"
      description: "Permet de lister l'ensemble des produits"
      operationId: "listProduits"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProduitReference"
        405:
          description: "Invalid input"
    post:
      tags:
        - "produit"
      summary: "Creation d'un produit"
      description: "Permet de créer une nouvelle fiche produit"
      operationId: "creerProduit"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Produit a créer"
          required: true
          schema:
            $ref: "#/definitions/Produit"
      responses:
        201:
          description: "successful operation"
        405:
          description: "Invalid input"
  /produits/{produitId}:
    get:
      tags:
        - "produit"
      summary: "consulter la fiche detaillée d'un produit"
      description: ""
      operationId: "getProduit"
      produces:
        - "application/json"
      parameters:
        - name: "produitId"
          in: "path"
          description: "identifiant du produit"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "Reference connue"
          schema:
            $ref: "#/definitions/Produit"
        404:
          description: "Reference inconnue"
  /familles:
    post:
      tags:
        - "famille"
      summary: "créer un nouvelle famille de produit"
      operationId: "createFamille"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "#/definitions/FamilleReference"
      responses:
        201:
          description: "successful operation"
        405:
          description: "Invalid input"
  /familles/{familleId}:
    get:
      tags:
        - "famille"
        - "produit"
      summary: "consulter les produits d'une famille"
      operationId: "getFamille"
      produces:
        - "application/json"
      parameters:
        - name: "familleId"
          in: "path"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Famille"
        404:
          description: "Famille not found"
definitions:
  ProduitReference:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      nom:
        type: "string"

  Produit:
    allOf:
      - $ref: '#/definitions/ProduitReference'
      - type: object
        properties:
          description:
            type: "string"
          famille:
            $ref: '#/definitions/FamilleReference'
          declinaisons:
            type: "array"
            items:
              $ref: '#/definitions/Declinaison'

  Declinaison:
    type: "object"
    properties:
      id:
        type: "integer"
        format : "int64"
      nom:
        type: "string"
      prix:
        type: "number"
        format : "double"
  FamilleReference:
    type: "object"
    properties:
      id:
        type: "integer"
        format : "int64"
      nom:
        type: "string"

  Famille:
    allOf:
      - $ref: '#/definitions/FamilleReference'
      - type: object
        properties:
          produits:
            type: "array"
            items:
              $ref: "#/definitions/ProduitReference"